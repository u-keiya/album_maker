file name: backend/src/routes/auth.ts
classname: (なし)
function name: POST /auth/register handler (async function)
short description: ユーザー名とパスワードを受け取り、ユーザーを新規登録し、JWTを返すAPIエンドポイント。
input / output:
  Input: Request body { username: string, password: string }
  Output (Success): Response body { token: string, userId: string, username: string }, Status 201
  Output (Error): Response body { error: string, message: string, details?: any[] }, Status 400, 409, 500
---
file name: backend/src/routes/auth.ts
classname: (なし)
function name: POST /auth/login handler (async function)
short description: ユーザー名とパスワードを受け取り、認証を行い、成功した場合にJWTを返すAPIエンドポイント。
input / output:
  Input: Request body { username: string, password: string }
  Output (Success): Response body { token: string, userId: string, username: string }, Status 200
  Output (Error): Response body { error: string, message: string, details?: any[] }, Status 400, 401, 500
---
file name: frontend/src/components/Register.tsx
classname: Register (React Functional Component)
function name: Register (React Functional Component)
short description: ユーザー登録フォームとAPI連携機能を提供するコンポーネント
input / output:
    - input: なし (内部でユーザー名とパスワードの状態を管理)
    - output: ユーザー登録フォームのUI要素。登録ボタンクリック時に `/auth/register` APIを呼び出す。
---
file name: frontend/src/components/Login.tsx
classname: Login (React Functional Component)
function name: Login (React Functional Component)
short description: ログインフォームとAPI連携、ユーザー登録画面への遷移機能を提供するコンポーネント
input / output:
    - input: なし (内部でユーザー名とパスワードの状態を管理)
    - output: ログインフォームのUI要素。ログインボタンクリック時に `/auth/login` APIを呼び出す。登録ボタンクリック時に `/register` へ遷移する。
---
file name: frontend/src/App.tsx
classname: App (React Functional Component)
function name: App (React Functional Component)
short description: アプリケーションのメインコンポーネント。ルーティングを設定し、ログイン画面とユーザー登録画面を表示する。
input / output:
    - input: なし
    - output: URLパスに応じた画面コンポーネント (Login or Register)
---
file name: backend/src/routes/albums.ts
function name: POST /
short description: Creates a new album with an initial page for the authenticated user.
input / output:
  Input: { "title": "string (optional, max 100)" } (in request body)
  Output (Success 201): { "albumId": "string (uuid)", "title": "string", "createdAt": "string (date-time)", "updatedAt": "string (date-time)", "pages": [{ "pageId": "string (uuid)", "pageNumber": 1 }] }
  Output (Error 400/401/404/500): { "error": "string", "message": "string" }
---
---
file name: backend/src/routes/albums.ts
function name: GET /
short description: Retrieves a list of albums owned by the authenticated user.
input / output:
  Input: None (JWT token in header)
  Output (Success 200): [ { "albumId": "string (uuid)", "title": "string", "createdAt": "string (date-time)", "updatedAt": "string (date-time)" } ]
  Output (Error 401/500): { "error": "string", "message": "string" }
---
---
file name: backend/src/routes/albums.ts
function name: DELETE /:albumId
short description: Deletes a specific album owned by the authenticated user, including associated pages and objects (via cascading).
input / output:
  Input: albumId (in path parameter), JWT token (in header)
  Output (Success 204): No Content
  Output (Error 401/403/404/500): { "error": "string", "message": "string" }
---
- file name: frontend/src/components/AlbumList.tsx
- classname: N/A
- function name: AlbumList
- short description: Displays a list of albums and allows users to navigate to create a new album or view an existing album.
- input / output:
  - input: None (fetches data internally)
  - output: JSX.Element (React component rendering the album list)
---
file name: backend/src/routes/photos.ts
classname: (なし)
function name: POST /photos handler (async function)
short description: 新しい写真を認証済みユーザーとしてアップロードし、Azure Blob Storage に保存後、データベースに写真情報を記録するAPIエンドポイント。
input / output:
  Input: FormData with 'file' (image file), JWT token (in header)
  Output (Success 201): { "photoId": "string (uuid)", "filePath": "string (url)", "originalFilename": "string", "uploadedAt": "string (date-time)", "fileSize": "number", "mimeType": "string" }
  Output (Error 400/401/404/500): { "error": "string", "message": "string", "details"?: string }
---
---
file name: backend/src/routes/photos.ts
classname: (なし)
function name: DELETE /photos/:photoId handler (async function)
short description: 指定された photoId の写真を認証済みユーザーとして Azure Blob Storage とデータベースから削除するAPIエンドポイント。
input / output:
  Input: photoId (in path parameter), JWT token (in header)
  Output (Success 204): No Content
  Output (Error 400/401/404/500): { "error": "string", "message": "string", "details"?: string }
---
---
file name: frontend/src/components/AlbumEdit.tsx
classname: AlbumEdit (React Functional Component)
function name: AlbumEdit (React Functional Component)
short description: アルバム編集画面の基本レイアウト、ツールバー、サイドバーを提供するコンポーネント。
input / output:
    - input: URLパラメータ (albumId)
    - output: アルバム編集画面のUI要素。
---